void		void
main		main
(		Left_Paren
void		void
)		Right_Paren
{		Left_Curly
int		int
a		ID
=		Assign_Op
10		Int_Literal
;		Semi_Colon
int		int
b		ID
=		Assign_Op
20		Int_Literal
;		Semi_Colon
b		ID
=		Assign_Op
a		ID
++		Inc_Op
;		Semi_Colon
b		ID
+=		Add_Assignment
5		Int_Literal
;		Semi_Colon
b		ID
=		Assign_Op
a		ID
--		Dec_Op
;		Semi_Colon
b		ID
-		Sub_Op
a		ID
;		Semi_Colon
b		ID
-=		Sub_Assignment
a		ID
;		Semi_Colon
b		ID
*=		Mul_Assignment
a		ID
;		Semi_Colon
b		ID
*		Mul_Op
a		ID
;		Semi_Colon
b		ID
/=		Div_Assignment
a		ID
;		Semi_Colon
b		ID
/		Div_Op
a		ID
;		Semi_Colon
b		ID
%=		Rem_Assignment
a		ID
;		Semi_Colon
b		ID
%		Rem_Op
a		ID
;		Semi_Colon
b		ID
<		Lessthan_Op
a		ID
;		Semi_Colon
b		ID
<=		Lessthan_or_equal_Op
a		ID
;		Semi_Colon
b		ID
>		Greaterthan_Op
a		ID
;		Semi_Colon
b		ID
>=		Greaterthan_or_equal_Op
a		ID
;		Semi_Colon
b		ID
==		Equal_to_Op
a		ID
;		Semi_Colon
b		ID
&&		Log_AND_Op
a		ID
;		Semi_Colon
b		ID
||		Log_OR_Op
a		ID
;		Semi_Colon
b		ID
!		Log_NOT_Op
a		ID
;		Semi_Colon
b		ID
!=		Not_equal_to_Op
a		ID
;		Semi_Colon
float		float
c		ID
=		Assign_Op
33.24		Float
;		Semi_Colon
double		double
arr		ID
=		Assign_Op
new		new
double		double
[		Left_Square_bracket
22.3		Float
,		COMMA
34		Int_Literal
,		COMMA
44.65		Float
]		Right_Square_bracket
String		ID
char		char
=		Assign_Op
'		Apostrophes
a		ID
'		Apostrophes
;		Semi_Colon
String		ID
str		ID
=		Assign_Op
"		Quotation_mark
test		ID
"		Quotation_mark
;		Semi_Colon
//		Single_line_comment
single		ID
line		ID
comment		ID
/*		Start_Multi_line_comment
multi		ID
line		ID
comment		ID
*/		End_Multi_line_comment
UNRECOGNIZED_TOKEN
